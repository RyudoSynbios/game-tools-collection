{
  "ItemSection": {
    "scope": "typescript",
    "prefix": "section",
    "body": ["{ type: \"section\", flex: true, items: [$0] },"],
    "description": "Add a ItemSection",
  },
  "overrideParseItem": {
    "scope": "typescript",
    "prefix": "overrideParseItem",
    "body": [
      "export function overrideParseItem(item: Item): Item {",
      "  if (\"id\" in item && item.id === \"$0\") {",
      "    const itemInt = item as ItemInt;",
      "",
      "    return itemInt;",
      "  }",
      "",
      "  return item;",
      "}",
    ],
    "description": "Add a overrideParseItem",
  },
  "overrideItem": {
    "scope": "typescript",
    "prefix": "overrideItem",
    "body": [
      "export function overrideItem(item: Item): Item {",
      "  if (\"id\" in item && item.id === \"$0\") {",
      "    const itemInt = item as ItemInt;",
      "",
      "    return itemInt;",
      "  }",
      "",
      "  return item;",
      "}",
    ],
    "description": "Add a overrideItem",
  },
  "overrideGetInt": {
    "scope": "typescript",
    "prefix": "overrideGetInt",
    "body": [
      "export function overrideGetInt(item: Item): [boolean, number | undefined] {",
      "  if (\"id\" in item && item.id === \"$0\") {",
      "    const itemInt = item as ItemInt;",
      "",
      "    return [true, 0x0];",
      "  }",
      "",
      "  return [false, undefined];",
      "}",
    ],
    "description": "Add a overrideGetInt",
  },
  "overrideSetInt": {
    "scope": "typescript",
    "prefix": "overrideSetInt",
    "body": [
      "export function overrideSetInt(item: Item, value: string): boolean {",
      "  if (\"id\" in item && item.id === \"$0\") {",
      "    const itemInt = item as ItemInt;",
      "",
      "    setInt(itemInt.offset, \"uint8\", 0x0);",
      "",
      "    return true;",
      "  }",
      "",
      "  return false;",
      "}",
    ],
    "description": "Add a overrideSetInt",
  },
  "afterSetInt": {
    "scope": "typescript",
    "prefix": "afterSetInt",
    "body": [
      "export function afterSetInt(item: Item): void {",
      "  if (\"id\" in item && item.id === \"$0\") {",
      "    const itemInt = item as ItemInt;",
      "",
      "    setInt(itemInt.offset, \"uint8\", 0x0);",
      "  }",
      "}",
    ],
    "description": "Add a afterSetInt",
  },
}
